server.port=8800
spring.application.name=customer-service

# ===============================
# DATABASE
# ===============================
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://192.168.75.205:5432/hd_dev
#spring.datasource.url=jdbc:postgresql://localhost:5432/hd_dev
spring.datasource.username=tvo
spring.datasource.password=hd@123

# ===============================
# JPA / HIBERNATE
# ===============================
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
# Hibernate ddl auto=update will automatically create the tables
spring.jpa.hibernate.ddl-auto = update
# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# ===============================
# HIKARI
# ===============================
#60 sec
spring.datasource.hikari.connection-timeout=60000
# max 5
spring.datasource.hikari.maximum-pool-size=10

# ===============================
# FILE
# ===============================
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads


# ===============================
# RABBITMQ
# ===============================
spring.rabbitmq.host=192.168.75.205
spring.rabbitmq.port=5672
spring.rabbitmq.username=tvo
spring.rabbitmq.password=hd@123


# ===============================
# EUREKA REGISTER
# ===============================
#logging.level.com.netflix.eureka= OFF
#logging.level.com.netflix.discovery = OFF
#
#eureka.instance.appname= customer-service
#eureka.client.enabled= true
#eureka.client.register-with-eureka= true
#eureka.client.fetch-registry= true
#eureka.client.service-url.defaultZone= http://192.168.75.205:8761/eureka/

app.module.contact.service.url = http://192.168.75.205:8806/api/v1/contract
app.module.filehandler.service.url = http://192.168.75.205:8802/api/v1/filehandler
app.module.sms.service.url = http://192.168.75.205:8809/api/v1/sms
app.module.staff.service.url = http://192.168.75.205:8808/api/v1/staff